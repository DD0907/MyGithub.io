<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taobaos.dao.ItemMapper">
	<resultMap id="BaseResultMap" type="com.taobaos.pojo.Item">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="price" jdbcType="DECIMAL" property="price" />
		<result column="origin_price" jdbcType="DECIMAL" property="originPrice" />
		<result column="main_pic" jdbcType="VARCHAR" property="mainPic" />
		<result column="code" jdbcType="VARCHAR" property="code" />
		<result column="shop_id" jdbcType="INTEGER" property="shopId" />
		<result column="status" jdbcType="BIT" property="status" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="com.taobaos.pojo.Item">
		<result column="note" jdbcType="LONGVARCHAR" property="note" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, price, origin_price, main_pic, code, shop_id, status
	</sql>
	<sql id="Blob_Column_List">
		note
	</sql>
	<select id="selectByExampleWithBLOBs" parameterType="com.taobaos.pojo.ItemExample"
		resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from item
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" parameterType="com.taobaos.pojo.ItemExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from item
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from item
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from item
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.taobaos.pojo.ItemExample">
		delete from item
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.taobaos.pojo.Item">
		insert into item (id, name, price,
		origin_price, main_pic, code,
		shop_id, status, note
		)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{price,jdbcType=DECIMAL},
		#{originPrice,jdbcType=DECIMAL}, #{mainPic,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR},
		#{shopId,jdbcType=INTEGER}, #{status,jdbcType=BIT},
		#{note,jdbcType=LONGVARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.taobaos.pojo.Item">
		insert into item
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="originPrice != null">
				origin_price,
			</if>
			<if test="mainPic != null">
				main_pic,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="shopId != null">
				shop_id,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="note != null">
				note,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				#{price,jdbcType=DECIMAL},
			</if>
			<if test="originPrice != null">
				#{originPrice,jdbcType=DECIMAL},
			</if>
			<if test="mainPic != null">
				#{mainPic,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="shopId != null">
				#{shopId,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=BIT},
			</if>
			<if test="note != null">
				#{note,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.taobaos.pojo.ItemExample"
		resultType="java.lang.Long">
		select count(*) from item
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update item
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.price != null">
				price = #{record.price,jdbcType=DECIMAL},
			</if>
			<if test="record.originPrice != null">
				origin_price = #{record.originPrice,jdbcType=DECIMAL},
			</if>
			<if test="record.mainPic != null">
				main_pic = #{record.mainPic,jdbcType=VARCHAR},
			</if>
			<if test="record.code != null">
				code = #{record.code,jdbcType=VARCHAR},
			</if>
			<if test="record.shopId != null">
				shop_id = #{record.shopId,jdbcType=INTEGER},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=BIT},
			</if>
			<if test="record.note != null">
				note = #{record.note,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update item
		set id = #{record.id,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		price = #{record.price,jdbcType=DECIMAL},
		origin_price = #{record.originPrice,jdbcType=DECIMAL},
		main_pic = #{record.mainPic,jdbcType=VARCHAR},
		code = #{record.code,jdbcType=VARCHAR},
		shop_id = #{record.shopId,jdbcType=INTEGER},
		status = #{record.status,jdbcType=BIT},
		note = #{record.note,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update item
		set id = #{record.id,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		price = #{record.price,jdbcType=DECIMAL},
		origin_price = #{record.originPrice,jdbcType=DECIMAL},
		main_pic = #{record.mainPic,jdbcType=VARCHAR},
		code = #{record.code,jdbcType=VARCHAR},
		shop_id = #{record.shopId,jdbcType=INTEGER},
		status = #{record.status,jdbcType=BIT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.taobaos.pojo.Item">
		update item
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=DECIMAL},
			</if>
			<if test="originPrice != null">
				origin_price = #{originPrice,jdbcType=DECIMAL},
			</if>
			<if test="mainPic != null">
				main_pic = #{mainPic,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="shopId != null">
				shop_id = #{shopId,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=BIT},
			</if>
			<if test="note != null">
				note = #{note,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.taobaos.pojo.Item">
		update item
		set name = #{name,jdbcType=VARCHAR},
		price = #{price,jdbcType=DECIMAL},
		origin_price = #{originPrice,jdbcType=DECIMAL},
		main_pic = #{mainPic,jdbcType=VARCHAR},
		code = #{code,jdbcType=VARCHAR},
		shop_id = #{shopId,jdbcType=INTEGER},
		status = #{status,jdbcType=BIT},
		note = #{note,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.taobaos.pojo.Item">
		update item
		set name = #{name,jdbcType=VARCHAR},
		price = #{price,jdbcType=DECIMAL},
		origin_price = #{originPrice,jdbcType=DECIMAL},
		main_pic = #{mainPic,jdbcType=VARCHAR},
		code = #{code,jdbcType=VARCHAR},
		shop_id = #{shopId,jdbcType=INTEGER},
		status = #{status,jdbcType=BIT}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectItemByNames" parameterType="String"
		resultMap="ResultMapWithBLOBs">
		select * from item where name=#{name}
	</select>
</mapper>