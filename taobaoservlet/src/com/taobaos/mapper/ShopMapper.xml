<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taobaos.dao.ShopMapper">
	<resultMap id="BaseResultMap" type="com.taobaos.pojo.Shop">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="log_url" jdbcType="VARCHAR" property="logUrl" />
		<result column="url" jdbcType="VARCHAR" property="url" />
		<result column="status" jdbcType="BIT" property="status" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="com.taobaos.pojo.Shop">
		<result column="note" jdbcType="LONGVARCHAR" property="note" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, log_url, url, status
	</sql>
	<sql id="Blob_Column_List">
		note
	</sql>
	<select id="selectByExampleWithBLOBs" parameterType="com.taobaos.pojo.ShopExample"
		resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from shop
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" parameterType="com.taobaos.pojo.ShopExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from shop
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from shop
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from shop
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.taobaos.pojo.ShopExample">
		delete from shop
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.taobaos.pojo.Shop">
		insert into shop (id, name, log_url,
		url, status, note)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{logUrl,jdbcType=VARCHAR},
		#{url,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, #{note,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.taobaos.pojo.Shop">
		insert into shop
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="logUrl != null">
				log_url,
			</if>
			<if test="url != null">
				url,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="note != null">
				note,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="logUrl != null">
				#{logUrl,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=BIT},
			</if>
			<if test="note != null">
				#{note,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.taobaos.pojo.ShopExample"
		resultType="java.lang.Long">
		select count(*) from shop
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update shop
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.logUrl != null">
				log_url = #{record.logUrl,jdbcType=VARCHAR},
			</if>
			<if test="record.url != null">
				url = #{record.url,jdbcType=VARCHAR},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=BIT},
			</if>
			<if test="record.note != null">
				note = #{record.note,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update shop
		set id = #{record.id,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		log_url = #{record.logUrl,jdbcType=VARCHAR},
		url = #{record.url,jdbcType=VARCHAR},
		status = #{record.status,jdbcType=BIT},
		note = #{record.note,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update shop
		set id = #{record.id,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		log_url = #{record.logUrl,jdbcType=VARCHAR},
		url = #{record.url,jdbcType=VARCHAR},
		status = #{record.status,jdbcType=BIT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.taobaos.pojo.Shop">
		update shop
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="logUrl != null">
				log_url = #{logUrl,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				url = #{url,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=BIT},
			</if>
			<if test="note != null">
				note = #{note,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.taobaos.pojo.Shop">
		update shop
		set name = #{name,jdbcType=VARCHAR},
		log_url = #{logUrl,jdbcType=VARCHAR},
		url = #{url,jdbcType=VARCHAR},
		status = #{status,jdbcType=BIT},
		note = #{note,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.taobaos.pojo.Shop">
		update shop
		set name = #{name,jdbcType=VARCHAR},
		log_url = #{logUrl,jdbcType=VARCHAR},
		url = #{url,jdbcType=VARCHAR},
		status = #{status,jdbcType=BIT}
		where id = #{id,jdbcType=INTEGER}
	</update>


	<!-- 把店铺的状态改为0 -->
	<update id="deleteShopStatus">
		update shop set status='0' where name=#{name}
	</update>
	<!-- 把查询的店铺存在shop里 ,方便修改 -->
	<select id="updateSelectShopByName" parameterType="String"
		resultMap="BaseResultMap">
		select * from
		shop where name=#{name}
	</select>
</mapper>