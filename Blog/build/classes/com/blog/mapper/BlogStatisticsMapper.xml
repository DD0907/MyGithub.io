<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.dao.BlogStatisticsMapper">
  <resultMap id="BaseResultMap" type="com.blog.pojo.BlogStatistics">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="blog_id" jdbcType="INTEGER" property="blogId" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="view_count" jdbcType="INTEGER" property="viewCount" />
    <result column="reply_comment_count" jdbcType="INTEGER" property="replyCommentCount" />
    <result column="collect_count" jdbcType="INTEGER" property="collectCount" />
    <result column="share_count" jdbcType="INTEGER" property="shareCount" />
    <result column="admire_count" jdbcType="INTEGER" property="admireCount" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="release_time" jdbcType="VARCHAR" property="releaseTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, blog_id, comment_count, view_count, reply_comment_count, collect_count, share_count, 
    admire_count, like_count, release_time
  </sql>
  <select id="selectByExample" parameterType="com.blog.pojo.BlogStatisticsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog_statistics
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog_statistics
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.blog.pojo.BlogStatisticsExample">
    delete from blog_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.blog.pojo.BlogStatistics">
    insert into blog_statistics (id, blog_id, comment_count, 
      view_count, reply_comment_count, collect_count, 
      share_count, admire_count, like_count, 
      release_time)
    values (#{id,jdbcType=INTEGER}, #{blogId,jdbcType=INTEGER}, #{commentCount,jdbcType=INTEGER}, 
      #{viewCount,jdbcType=INTEGER}, #{replyCommentCount,jdbcType=INTEGER}, #{collectCount,jdbcType=INTEGER}, 
      #{shareCount,jdbcType=INTEGER}, #{admireCount,jdbcType=INTEGER}, #{likeCount,jdbcType=INTEGER}, 
      #{releaseTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.blog.pojo.BlogStatistics">
    insert into blog_statistics
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="blogId != null">
        blog_id,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="viewCount != null">
        view_count,
      </if>
      <if test="replyCommentCount != null">
        reply_comment_count,
      </if>
      <if test="collectCount != null">
        collect_count,
      </if>
      <if test="shareCount != null">
        share_count,
      </if>
      <if test="admireCount != null">
        admire_count,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="releaseTime != null">
        release_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="blogId != null">
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="replyCommentCount != null">
        #{replyCommentCount,jdbcType=INTEGER},
      </if>
      <if test="collectCount != null">
        #{collectCount,jdbcType=INTEGER},
      </if>
      <if test="shareCount != null">
        #{shareCount,jdbcType=INTEGER},
      </if>
      <if test="admireCount != null">
        #{admireCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null">
        #{releaseTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blog.pojo.BlogStatisticsExample" resultType="java.lang.Long">
    select count(*) from blog_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog_statistics
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.blogId != null">
        blog_id = #{record.blogId,jdbcType=INTEGER},
      </if>
      <if test="record.commentCount != null">
        comment_count = #{record.commentCount,jdbcType=INTEGER},
      </if>
      <if test="record.viewCount != null">
        view_count = #{record.viewCount,jdbcType=INTEGER},
      </if>
      <if test="record.replyCommentCount != null">
        reply_comment_count = #{record.replyCommentCount,jdbcType=INTEGER},
      </if>
      <if test="record.collectCount != null">
        collect_count = #{record.collectCount,jdbcType=INTEGER},
      </if>
      <if test="record.shareCount != null">
        share_count = #{record.shareCount,jdbcType=INTEGER},
      </if>
      <if test="record.admireCount != null">
        admire_count = #{record.admireCount,jdbcType=INTEGER},
      </if>
      <if test="record.likeCount != null">
        like_count = #{record.likeCount,jdbcType=INTEGER},
      </if>
      <if test="record.releaseTime != null">
        release_time = #{record.releaseTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog_statistics
    set id = #{record.id,jdbcType=INTEGER},
      blog_id = #{record.blogId,jdbcType=INTEGER},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      view_count = #{record.viewCount,jdbcType=INTEGER},
      reply_comment_count = #{record.replyCommentCount,jdbcType=INTEGER},
      collect_count = #{record.collectCount,jdbcType=INTEGER},
      share_count = #{record.shareCount,jdbcType=INTEGER},
      admire_count = #{record.admireCount,jdbcType=INTEGER},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      release_time = #{record.releaseTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.pojo.BlogStatistics">
    update blog_statistics
    <set>
      <if test="blogId != null">
        blog_id = #{blogId,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        view_count = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="replyCommentCount != null">
        reply_comment_count = #{replyCommentCount,jdbcType=INTEGER},
      </if>
      <if test="collectCount != null">
        collect_count = #{collectCount,jdbcType=INTEGER},
      </if>
      <if test="shareCount != null">
        share_count = #{shareCount,jdbcType=INTEGER},
      </if>
      <if test="admireCount != null">
        admire_count = #{admireCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.pojo.BlogStatistics">
    update blog_statistics
    set blog_id = #{blogId,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      reply_comment_count = #{replyCommentCount,jdbcType=INTEGER},
      collect_count = #{collectCount,jdbcType=INTEGER},
      share_count = #{shareCount,jdbcType=INTEGER},
      admire_count = #{admireCount,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      release_time = #{releaseTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>